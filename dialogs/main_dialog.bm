'FTP Client
'Copyright Matt Kilgore -- 2011/2013

'This program is free software, without any warranty of any kind.
'You are free to edit, copy, modify, and redistribute it under the terms
'of the Do What You Want Public License, Version 1, as published by Matt Kilgore
'See file COPYING that should have been included with this source.



SUB main () 'main loop for GUI, etc.

get_new_dir
refresh_Local_files
global_selected_gui = 1

print_files boxes(1), Local_files()
print_files boxes(2), Remote_files()

DO
  _LIMIT 200
  
  if GUI_update_screen(boxes(), BOXES, global_selected_gui) then
    'GUI_draw_element_array boxes(), BOXES, global_selected_gui
    update_scrn
  end if
  
  g_clicked = GUI_mouse_range(boxes(), BOXES, global_selected_gui)
  
  key$ = GUI_inkey$(boxes(), BOXES, global_selected_gui)
  
  if g_clicked = 1 then
    'boxes(1).pressed = 0
    CHDIR MEM_get_str$(Local_files(boxes(1).selected).nam)
    get_new_dir
    refresh_Local_files
    'boxes(1).updated = -1
    boxes(1).flags = boxes(1).flags OR GUI_FLAG_UPDATED
  end if
  if g_clicked = 2 then
    'boxes(2).pressed = 0
    change_remote_dir RTRIM$(MEM_get_str$(Remote_files(boxes(2).selected).nam))
    Update_Remote_Files
    'boxes(2).updated = -1
    boxes(2).flags = boxes(2).flags OR GUI_FLAG_UPDATED
    'update remote files
  end if
  
  IF boxes(6).flags AND GUI_FLAG_MENU_CHOSEN then
    'boxes(6).menu_chosen = 0
    boxes(6).flags = (boxes(6).flags AND NOT GUI_FLAG_MENU_CHOSEN) OR GUI_FLAG_UPDATED
    update_scrn
    'boxes(6).updated = -1
    i$ = boxes(6).menu_choice
    if i$ = "EXIT " then 'exit
      exit_flag = -1
    elseif i$ = "ABOUT" then 'about
      about_dialog
    elseif i$ = "CONEC" then 'connect
      Connect_To_FTP
    elseif i$ = "DISCO" then 'disconnect
      is_connected = 0
      CLOSE command_connect&
      status$ = "Not Connected."
      boxes(2).length = 0
      boxes(2).flags = boxes(2).flags OR GUI_FLAG_UPDATED
      'boxes(2).updated = -1
    elseif i$ = "CMDLN" then 'command line
      command_line
      if is_connected then update_remote_files
      refresh_Local_files
      boxes(1).flags = boxes(1).flags OR GUI_FLAG_UPDATED
    elseif i$ = "LREFR" then 'local refresh 
      refresh_Local_files
      boxes(1).flags = boxes(1).flags OR GUI_FLAG_UPDATED
    elseif i$ = "LDELE" then 'local delete
      delete_file_GUI 1
      boxes(1).flags = boxes(1).flags OR GUI_FLAG_UPDATED
    elseif i$ = "LSHOH" then 'local show hidden
      show_hidden_local = NOT show_hidden_local
      refresh_Local_files
      boxes(1).flags = boxes(1).flags OR GUI_FLAG_UPDATED
    elseif i$ = "LMKDI" then 'local make directory
    elseif i$ = "LRMDI" then 'local rename directory
    elseif i$ = "LDLDI" then 'local delete directory
    
    end if
  end if
  '  ELSEIF global_menu_sel = 2 THEN
  '    IF menu_sel = 1 THEN
  '      refresh_Local_files
  '      update = -1
  '    ELSEIF menu_sel = 3 THEN
  '      rename_file_GUI 1 '1 = local rename file
  '      refresh_Local_files
  '      update = -1
  '    ELSEIF menu_sel = 4 THEN
  '      delete_file_GUI 1 '1 = local delete file
  '      update = -1
  '    ELSEIF menu_sel = 5 THEN
  '      show_hidden_local = NOT show_hidden_local
  '      refresh_Local_files
  '      update = -1
  '    END IF

  '  ELSEIF global_menu_sel = 3 THEN
  '    IF menu_sel = 1 THEN
  '      Update_Remote_Files
  '      update = -1
  '    ELSEIF menu_sel = 3 THEN
  '      rename_file_GUI 0 '0 = remote delete file
  '      Update_Remote_Files
  '      update = -1
  '    ELSEIF menu_sel = 4 THEN
  '      delete_file_GUI 0 '0 = remote delete file
  '      Update_Remote_Files
  '      update = -1
  '    ELSEIF menu_sel = 5 THEN
  '      show_hidden_remote = NOT show_hidden_remote
  '      Update_Remote_Files
  
  '      update = -1
  '    END IF
  '  ELSEIF global_menu_sel = 4 THEN
  '    IF menu_sel = 1 THEN
  '      send_file get_str$(Local_files(boxes(2).selected).nam)
  '      refresh_Local_files
  '      update = -1
  '    ELSEIF menu_sel = 2 THEN
  '      get_file get_str$(Remote_files(boxes(2).selected).nam)
  '      refresh_Local_files
  '      update = -1
  '    END IF
  '  ELSEIF global_menu_sel = 5 THEN
  '    IF menu_sel = 1 THEN 'help
  '      test = prompt_dialog("Test", 10, OK_BUTTON OR CANCEL_BUTTON OR NO_BUTTON OR CLOSE_BUTTON OR YES_BUTTON, 10)
  '    ELSEIF menu_sel = 2 THEN
  '      settings_dialog
  '      IF is_connected THEN Update_Remote_Files
  '      refresh_Local_files
  '      update = -1
  '    ELSE
  '      IF menu_sel = 4 THEN 'about
  '        about_dialog
  '        update = -1
  '      END IF
  '    END IF
  '  END IF
  '  menu_clicked = 0
  '  selected_box = 4
  '  temp_menu_sel = 0
  '  global_menu_sel = 0
  '  menu_sel = 0
  '  update = -1
  'END IF
LOOP UNTIL key$ = CHR$(27) or _EXIT or exit_flag
END SUB

SUB setup_main_GUI () 'sets up the main GUI
'if scrn& <> 0 then _FREEIMAGE scrn& 'prevent memory leak
'scrn& = _NEWIMAGE(scrnw, scrnh, 0)

'SCREEN scrn&

'boxes(1).nam = "Local"
'put_str boxes(1).nam, "Local"

boxes(1).col1 = 1
boxes(1).col2 = _WIDTH(0) \ 2
boxes(1).row1 = 2
boxes(1).row2 = _HEIGHT(0) - 2
boxes(1).flags = boxes(1).flags OR GUI_FLAG_SCROLL_V
boxes(1).selected = 1
boxes(1).c.mcolor = GUI_DEFAULT_COLOR_LIST.mcolor
boxes(1).c.selcolor = GUI_DEFAULT_COLOR_LIST.selcolor
boxes(1).c.scroll_color = GUI_DEFAULT_COLOR_LIST.scroll_color

boxes(2).col1 = _WIDTH(0) \ 2 + 1
boxes(2).col2 = _WIDTH(0)
boxes(2).row1 = 2
boxes(2).row2 = _HEIGHT(0) - 2
boxes(2).flags = boxes(2).flags OR GUI_FLAG_SCROLL_V
boxes(2).selected = 1
boxes(2).c.mcolor = GUI_DEFAULT_COLOR_LIST.mcolor
boxes(2).c.selcolor = GUI_DEFAULT_COLOR_LIST.selcolor
boxes(2).c.scroll_color = GUI_DEFAULT_COLOR_LIST.scroll_color

boxes(3).col1 = 1
boxes(3).row1 = _HEIGHT(0)
boxes(3).c.mcolor.fr = status_c1
boxes(3).c.mcolor.bk = status_c2

boxes(4).row1 = boxes(2).row2 + 1
boxes(4).col1 = 1

boxes(5).row1 = boxes(2).row2 + 1
boxes(5).col1 = boxes(2).col1

boxes(6).col1 = 1
boxes(6).col2 = _WIDTH(0)
boxes(6).row1 = 1
boxes(6).menu_padding = 2
boxes(6).c.mcolor = GUI_DEFAULT_COLOR_MENU.mcolor
boxes(6).c.selcolor = GUI_DEFAULT_COLOR_MENU.selcolor
boxes(6).c.scroll_color = GUI_DEFAULT_COLOR_MENU.scroll_color

boxes(7).row1 = 2
boxes(7).row2 = 24
boxes(7).col1 = 1
boxes(7).col2 = 80
'menux.c1 = menu_c1
'menux.c2 = menu_c2


END SUB

SUB update_scrn () 'updates screen -- draws main gui

MEM_put_str boxes(3).nam, status$ + space$(_WIDTH(0) - len(status$))

leng = _WIDTH(0) \ 2 - 1
IF LEN(Local_dir$) < leng THEN
  l$ = Local_dir$
ELSE
  IF INSTR(Local_dir$, ":") THEN
    'Windows dir
    dir$ = LEFT$(Local_dir$, 3) + "..." + RIGHT$(Local_dir$, leng - 6)
  ELSE
    dir$ = "/..." + RIGHT$(Local_dir$, leng - 4)
  END IF
  l$ = dir$
END IF
IF LEN(Remote_dir$) < leng THEN
  r$ = remote_dir$
ELSE
  IF INSTR(Local_dir$, ":") THEN
    dir$ = LEFT$(Remote_dir$, 3) + "..." + RIGHT$(Remote_dir$, leng - 6)
  ELSE
    dir$ = "/..." + RIGHT$(Remote_dir$, leng - 4)
  END IF
  r$ = dir$
END IF

MEM_put_str boxes(4).nam, l$
MEM_put_str boxes(5).nam, r$

GUI_draw_element_array boxes(), BOXES, global_selected_gui

END SUB

SUB print_files (b AS GUI_element_type, f() AS filedir_type) 'Displays files f() in box b

b.scroll_offset_vert = 0
b.selected = 0
'if b.length > b.lines.length then
MEM_reallocate_array b.lines, b.length + 2
'end if
FOR x = 1 to b.length 'b.row2 - b.row1 - 1
  k$ = MEM_get_Str$(f(x).nam)
  if len(k$) > b.col2 - b.col1 - 4 then
    k$ = mid$(k$, 1, b.col2 - b.col1 - 4)
  else
    k$ = k$ + space$((b.col2 - b.col1 - 4) - len(k$))
  end if
  if f(x).flag_cwd and f(x).flag_retr then
    k$ = k$ + "LNK"
  elseif f(x).flag_cwd then
    k$ = k$ + "DIR"
  else
    k$ = k$ + "   "
  end if
  MEM_put_str_array b.lines, x, k$
next x
END SUB
